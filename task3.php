<!doctype html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Задача №3</title>
</head>
<body>
    <h2>Задача №3</h2>
    <p>В PHP есть функция var_dump($something), которая выводит подробную информацию о значениях и их типах. Попробуйте написать что-нибудь вроде var_dump(2*2); чтобы увидеть, как она работает. Изучите с помощью этой функции следующие выражения:</p>
    <!-- Функция var_dump — Выводит информацию о переменной.
        Функция отображает структурированную информацию об одном или нескольких выражениях, включая их тип и значение.-->
    <p>
        <?php
            var_dump(3/1); //(int)3
        /*
         * В данном примере функция показывает что выражение имеет тип integer (целые числа)
         * Ее значение равна 3.
         * Числа которые делятся нацело - то и результат возвращается целое значение
         */
        ?>
    </p>
    <p>
        <?php
            var_dump(1/3); //(float)0.333333333333
        /*
         * В данном примере функия показывает что выражение имеет тип float (числа с плавающей точкой)
         * Ее значение равна 0,33333333333
         * Возвращает число с плавающей точкой
         */
        ?>
    </p>
    <p>
        <?php
            var_dump('20cats' + 40); //(int)60
        /*
         *В данном примере функция показывает что выражение имеет тип integer (целые числа)
         *Как это получилось? Дело в том что в php знак "+" вседа нам дает число, и результатом будет число.
         */
        ?>
    </p>
    <p>
        <?php
            var_dump(18 % 4); //(int)2
        /*В данном примере функция показывает что выражение имеет тип integer (целые числа)
         *Результат операции остатка от деления % будет иметь тот же знак,
         * что и делимое — то есть, результат $a % $b будет иметь тот же знак, что и $a.
         * Очевидно что var_dump показывает нам 2 потому что 2 не делится на 4
         */
        ?>
    </p>
</body>
</html>